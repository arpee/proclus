
Browser.prototype.initialize = function initialize() {

    browser_self = this;

    if (this.app.BROWSERIFY == 0) { return; }
 
    if (this.app.options.messages == null) { this.app.options.messages = []; }


    // update wallet balance
    this.updateBalance();


    // customize module display
    selobj = $('#lightbox_compose_module_select');
    selobj.empty();
    for (c = 0; c < browser_self.app.modules.mods.length; c++) {
        selmod = '<option value="'+browser_self.app.modules.mods[c].name+'">'+browser_self.app.modules.mods[c].name+'</option>';
        selobj.append(selmod);
    };


    // default to our mail client
    browser_self.app.modules.displayUserInputForm("Email");


    // update the default FROM address to our own, to address blank
    $('#lightbox_compose_from_address').val(browser_self.app.wallet.returnPublicKey());
    $('#lightbox_compose_to_address').val("");

    this.app.modules.attachEvents();

    // tell the browser what our public/private keys look like
    $('#lightbox_viewkeys_publickey').html(this.app.wallet.returnPublicKey());
    $('#lightbox_viewkeys_privatekey').html(this.app.wallet.returnPrivateKey());



    // load saved messages into email client
    for (ii = 0; ii < this.app.options.messages.length; ii++) {
      tx = new saito.transaction(this.app.options.messages[ii]);
      if (tx.transaction.msg.module != "") {
        txmod = tx.transaction.msg.module;
        browser_self.app.modules.addMessageToInbox(tx, txmod);
      }
    }



